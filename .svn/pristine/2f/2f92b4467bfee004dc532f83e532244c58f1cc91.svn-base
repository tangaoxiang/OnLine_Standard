using System;
using System.Collections;
using System.Configuration;
using System.Data;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.HtmlControls;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using DigiPower.Onlinecol.Standard.BLL;
using DigiPower.Onlinecol.Standard.Model;

//用户添加/修改

namespace DigiPower.Onlinecol.Standard.Web.SystemManage
{
    public partial class UserAdd : PageBase
    {
        T_UsersInfo_BLL userBLL = new T_UsersInfo_BLL();

        protected void Page_Load(object sender, EventArgs e)
        {
            Ajax.Utility.RegisterTypeForAjax(typeof(UserAdd));
            MyAddInit();
            CompanyID.MySelectChange += new DigiPower.Onlinecol.Standard.Web.CommonCtrl.ctrlDropDownCompanyInfo.SelectChange(ddlCompan_MySelectChange);
            if (!this.IsPostBack)
            {
                CompanyID.DataBindEx();
                ddlCompan_MySelectChange();
                BindPage(ID);

                if ((CommonEnum.PageState)ViewState["ps"] == CommonEnum.PageState.ADD)
                    Createdate.Text = DateTime.Now.ToString("yyyy-MM-dd");
                if ((CommonEnum.PageState)ViewState["ps"] == CommonEnum.PageState.VIEW)
                    btnSave.Visible = false;
                if ((CommonEnum.PageState)ViewState["ps"] == CommonEnum.PageState.EDIT)
                    CompanyID.enabled = false;
            }
        }

        /// <summary>
        /// 公司下拉框选择事件,绑定对应角色
        /// </summary>
        private void ddlCompan_MySelectChange()
        {
            RoleID.BindDdlRold(CompanyID.SelectValue);
        }

        /// <summary>
        /// 保存
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        protected void btnSave_Click(object sender, EventArgs e)
        {
            T_UsersInfo_MDL model = new T_UsersInfo_MDL();
            if (ViewState["model"] != null)
                model = (Model.T_UsersInfo_MDL)ViewState["model"];

            object obj = Comm.GetValueToObject(model, this.tbl);
            if (obj != null)
            {
                T_UsersInfo_MDL Newmodel = (T_UsersInfo_MDL)obj;
                Newmodel.Passwd = DESEncrypt.Encrypt(Passwd.Text);                                 //密码加密
                Newmodel.Createdate = System.DateTime.Now;                                         //创建时间或最后修改时间
                Newmodel.Createdby = Common.Session.GetSession("UserName");                        //创建者或最后修改者
                Newmodel.UserType = SystemSet.EumUserType.Archive.ToString();                      //默认为系统用户 

                switch ((CommonEnum.PageState)ViewState["ps"])
                {
                    case CommonEnum.PageState.ADD:
                        userBLL.Add(Newmodel);
                        break;
                    case CommonEnum.PageState.EDIT:
                        T_UsersInfo_MDL tempObj = userBLL.GetModel(Newmodel.UserID);
                        userBLL.Update(Newmodel);
                        break;
                }
            }
            Common.MessageBox.CloseLayerOpenWeb(this.Page);
        }

        /// <summary>
        /// 绑定页面
        /// </summary>
        /// <param name="ID"></param>
        private void BindPage(string ID)
        {
            if (!String.IsNullOrWhiteSpace(ID))
            {
                T_UsersInfo_MDL model = new T_UsersInfo_MDL();
                model = userBLL.GetModel(Common.ConvertEx.ToInt(ID));
                if (model != null)
                {
                    ViewState["model"] = model;
                    object obj = Comm.SetValueToPage(model, this.tbl);
                    Passwd.Attributes("value", DESEncrypt.Decrypt(model.Passwd));
                }
            }
        }

        /// <summary>
        /// 判断登陆账号是否存在
        /// </summary>
        /// <param name="Action">编辑模式,新增或删除</param>
        /// <param name="UserID">用户ID</param>
        /// <param name="LoginName">账号ID</param>
        /// <returns></returns>
        [Ajax.AjaxMethod]
        public bool CheckLoginName(string Action, int UserID, string LoginName)
        {
            bool resultCheck = false;
            try
            {
                if (Action == CommonEnum.PageState.ADD.ToString().ToLower())
                    UserID = 0;

                if (!string.IsNullOrWhiteSpace(Action) && !string.IsNullOrWhiteSpace(LoginName))
                {
                    if (userBLL.Exists("lower(LoginName)='" + LoginName.Trim().ToLower() + "' and UserID!=" + UserID + " "))
                    {
                        resultCheck = true;
                    }
                }
            }
            catch (Exception ex)
            {
                Common.LogUtil.Debug(this, "判断登陆账号是否存在失败", ex);
            }
            return resultCheck;
        }

        /// <summary>
        /// 判断密码是否合法(字母和数组组成)
        /// </summary>                             
        /// <param name="Pwd">账号ID</param>
        /// <returns></returns>
        [Ajax.AjaxMethod]
        public bool CheckPassword(string Pwd)
        {
            return PublicModel.CheckAccountOrPwdValidity(Pwd);
        }
    }
}
