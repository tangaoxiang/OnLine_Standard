using System;
using System.Data;
using System.Text;
using System.Data.SqlClient;
using DigiPower.Onlinecol.Standard.DbUtility;//请先添加引用
namespace DigiPower.Onlinecol.Standard.DAL
{
    /// <summary>
    /// 数据访问类T_Question_DAL。
    /// </summary>
    public class T_Question_DAL
    {
        public T_Question_DAL()
        { }
        #region  成员方法

        /// <summary>
        /// 得到最大ID
        /// </summary>
        public int GetMaxId()
        {
            return DbHelperSQL.GetMaxID("QuestionID", "T_Question");
        }

        /// <summary>
        /// 是否存在该记录
        /// </summary>
        public bool Exists(int QuestionID)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("select count(1) from T_Question");
            strSql.Append(" where QuestionID=@QuestionID ");
            SqlParameter[] parameters = {
					new SqlParameter("@QuestionID", SqlDbType.Int,8)};
            parameters[0].Value = QuestionID;

            return DbHelperSQL.Exists(strSql.ToString(), parameters);
        }


        /// <summary>
        /// 增加一条数据
        /// </summary>
        public int Add(DigiPower.Onlinecol.Standard.Model.T_Question_MDL model)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("insert into T_Question(");
            strSql.Append("SingleProjectID,QuestionTypeID,FileListID,Title,Description,CreateUserID,CreateUserName,CreateDate,AnswerCount,ClickCount,AttachName,AttachPath,ReadFlag)");
            strSql.Append(" values (");
            strSql.Append("@SingleProjectID,@QuestionTypeID,@FileListID,@Title,@Description,@CreateUserID,@CreateUserName,@CreateDate,@AnswerCount,@ClickCount,@AttachName,@AttachPath,@ReadFlag)");
            strSql.Append(";select @@IDENTITY");
            SqlParameter[] parameters = {
					new SqlParameter("@SingleProjectID", SqlDbType.Int,8),
					new SqlParameter("@QuestionTypeID", SqlDbType.Int,8),
					new SqlParameter("@FileListID", SqlDbType.Int,8),
					new SqlParameter("@Title", SqlDbType.NVarChar,100),
					new SqlParameter("@Description", SqlDbType.NVarChar,4000),
					new SqlParameter("@CreateUserID", SqlDbType.Int,8),
					new SqlParameter("@CreateUserName", SqlDbType.NVarChar,50),
					new SqlParameter("@CreateDate", SqlDbType.DateTime),
					new SqlParameter("@AnswerCount", SqlDbType.Int,8),
					new SqlParameter("@ClickCount", SqlDbType.Int,8),
					new SqlParameter("@AttachName", SqlDbType.NVarChar,250),
					new SqlParameter("@AttachPath", SqlDbType.NVarChar,250),
					new SqlParameter("@ReadFlag", SqlDbType.Bit,1)};
            parameters[0].Value = model.SingleProjectID;
            parameters[1].Value = model.QuestionTypeID;
            parameters[2].Value = model.FileListID;
            parameters[3].Value = model.Title;
            parameters[4].Value = model.Description;
            parameters[5].Value = model.CreateUserID;
            parameters[6].Value = model.CreateUserName;
            parameters[7].Value = model.CreateDate;
            parameters[8].Value = model.AnswerCount;
            parameters[9].Value = model.ClickCount;
            parameters[10].Value = model.AttachName;
            parameters[11].Value = model.AttachPath;
            parameters[12].Value = model.ReadFlag;

            object obj = DbHelperSQL.GetSingle(strSql.ToString(), parameters);
            if (obj == null)
            {
                return 1;
            }
            else
            {
                return Convert.ToInt32(obj);
            }
        }
        /// <summary>
        /// 更新一条数据
        /// </summary>
        public void Update(DigiPower.Onlinecol.Standard.Model.T_Question_MDL model)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("update T_Question set ");
            strSql.Append("SingleProjectID=@SingleProjectID,");
            strSql.Append("QuestionTypeID=@QuestionTypeID,");
            strSql.Append("FileListID=@FileListID,");
            strSql.Append("Title=@Title,");
            strSql.Append("Description=@Description,");
            strSql.Append("CreateUserID=@CreateUserID,");
            strSql.Append("CreateUserName=@CreateUserName,");
            strSql.Append("CreateDate=@CreateDate,");
            strSql.Append("AnswerCount=@AnswerCount,");
            strSql.Append("ClickCount=@ClickCount,");
            strSql.Append("AttachName=@AttachName,");
            strSql.Append("AttachPath=@AttachPath,");
            strSql.Append("ReadFlag=@ReadFlag");
            strSql.Append(" where QuestionID=@QuestionID ");
            SqlParameter[] parameters = {
					new SqlParameter("@QuestionID", SqlDbType.Int,8),
					new SqlParameter("@SingleProjectID", SqlDbType.Int,8),
					new SqlParameter("@QuestionTypeID", SqlDbType.Int,8),
					new SqlParameter("@FileListID", SqlDbType.Int,8),
					new SqlParameter("@Title", SqlDbType.NVarChar,100),
					new SqlParameter("@Description", SqlDbType.NVarChar,4000),
					new SqlParameter("@CreateUserID", SqlDbType.Int,8),
					new SqlParameter("@CreateUserName", SqlDbType.NVarChar,50),
					new SqlParameter("@CreateDate", SqlDbType.DateTime),
					new SqlParameter("@AnswerCount", SqlDbType.Int,8),
					new SqlParameter("@ClickCount", SqlDbType.Int,8),
					new SqlParameter("@AttachName", SqlDbType.NVarChar,250),
					new SqlParameter("@AttachPath", SqlDbType.NVarChar,250),
					new SqlParameter("@ReadFlag", SqlDbType.Bit,1)};
            parameters[0].Value = model.QuestionID;
            parameters[1].Value = model.SingleProjectID;
            parameters[2].Value = model.QuestionTypeID;
            parameters[3].Value = model.FileListID;
            parameters[4].Value = model.Title;
            parameters[5].Value = model.Description;
            parameters[6].Value = model.CreateUserID;
            parameters[7].Value = model.CreateUserName;
            parameters[8].Value = model.CreateDate;
            parameters[9].Value = model.AnswerCount;
            parameters[10].Value = model.ClickCount;
            parameters[11].Value = model.AttachName;
            parameters[12].Value = model.AttachPath;
            parameters[13].Value = model.ReadFlag;

            DbHelperSQL.ExecuteSql(strSql.ToString(), parameters);
        }

        /// <summary>
        /// 删除一条数据
        /// </summary>
        public void Delete(int QuestionID)
        {

            StringBuilder strSql = new StringBuilder();
            strSql.Append("delete from T_Question ");
            strSql.Append(" where QuestionID=@QuestionID ");
            SqlParameter[] parameters = {
					new SqlParameter("@QuestionID", SqlDbType.Int,8)};
            parameters[0].Value = QuestionID;

            DbHelperSQL.ExecuteSql(strSql.ToString(), parameters);
        }


        /// <summary>
        /// 得到一个对象实体
        /// </summary>
        public DigiPower.Onlinecol.Standard.Model.T_Question_MDL GetModel(int QuestionID)
        {

            StringBuilder strSql = new StringBuilder();
            strSql.Append("select  top 1 QuestionID,SingleProjectID,QuestionTypeID,FileListID,Title,Description,CreateUserID,CreateUserName,CreateDate,AnswerCount,ClickCount,AttachName,AttachPath,ReadFlag from T_Question ");
            strSql.Append(" where QuestionID=@QuestionID ");
            SqlParameter[] parameters = {
					new SqlParameter("@QuestionID", SqlDbType.Int,8)};
            parameters[0].Value = QuestionID;

            DigiPower.Onlinecol.Standard.Model.T_Question_MDL model = new DigiPower.Onlinecol.Standard.Model.T_Question_MDL();
            DataSet ds = DbHelperSQL.Query(strSql.ToString(), parameters);
            if (ds.Tables[0].Rows.Count > 0)
            {
                if (ds.Tables[0].Rows[0]["QuestionID"].ToString() != "")
                {
                    model.QuestionID = int.Parse(ds.Tables[0].Rows[0]["QuestionID"].ToString());
                }
                if (ds.Tables[0].Rows[0]["SingleProjectID"].ToString() != "")
                {
                    model.SingleProjectID = int.Parse(ds.Tables[0].Rows[0]["SingleProjectID"].ToString());
                }
                if (ds.Tables[0].Rows[0]["QuestionTypeID"].ToString() != "")
                {
                    model.QuestionTypeID = int.Parse(ds.Tables[0].Rows[0]["QuestionTypeID"].ToString());
                }
                if (ds.Tables[0].Rows[0]["FileListID"].ToString() != "")
                {
                    model.FileListID = int.Parse(ds.Tables[0].Rows[0]["FileListID"].ToString());
                }
                model.Title = ds.Tables[0].Rows[0]["Title"].ToString();
                model.Description = ds.Tables[0].Rows[0]["Description"].ToString();
                if (ds.Tables[0].Rows[0]["CreateUserID"].ToString() != "")
                {
                    model.CreateUserID = int.Parse(ds.Tables[0].Rows[0]["CreateUserID"].ToString());
                }
                model.CreateUserName = ds.Tables[0].Rows[0]["CreateUserName"].ToString();
                if (ds.Tables[0].Rows[0]["CreateDate"].ToString() != "")
                {
                    model.CreateDate = DateTime.Parse(ds.Tables[0].Rows[0]["CreateDate"].ToString());
                }
                if (ds.Tables[0].Rows[0]["AnswerCount"].ToString() != "")
                {
                    model.AnswerCount = int.Parse(ds.Tables[0].Rows[0]["AnswerCount"].ToString());
                }
                if (ds.Tables[0].Rows[0]["ClickCount"].ToString() != "")
                {
                    model.ClickCount = int.Parse(ds.Tables[0].Rows[0]["ClickCount"].ToString());
                }
                model.AttachName = ds.Tables[0].Rows[0]["AttachName"].ToString();
                model.AttachPath = ds.Tables[0].Rows[0]["AttachPath"].ToString();
                if (ds.Tables[0].Rows[0]["ReadFlag"].ToString() != "")
                {
                    if ((ds.Tables[0].Rows[0]["ReadFlag"].ToString() == "1") || (ds.Tables[0].Rows[0]["ReadFlag"].ToString().ToLower() == "true"))
                    {
                        model.ReadFlag = true;
                    }
                    else
                    {
                        model.ReadFlag = false;
                    }
                }
                return model;
            }
            else
            {
                return null;
            }
        }

        /// <summary>
        /// 获得数据列表
        /// </summary>
        public DataSet GetList(string strWhere)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("select QuestionID,SingleProjectID,QuestionTypeID,FileListID,Title,Description,CreateUserID,CreateUserName,CreateDate,AnswerCount,ClickCount,AttachName,AttachPath,ReadFlag ");
            strSql.Append(" FROM T_Question ");
            if (strWhere.Trim() != "")
            {
                strSql.Append(" where " + strWhere);
            }
            return DbHelperSQL.Query(strSql.ToString());
        }

        /// <summary>
        /// 获得前几行数据
        /// </summary>
        public DataSet GetList(int Top, string strWhere, string filedOrder)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("select ");
            if (Top > 0)
            {
                strSql.Append(" top " + Top.ToString());
            }
            strSql.Append(" QuestionID,SingleProjectID,QuestionTypeID,FileListID,Title,Description,CreateUserID,CreateUserName,CreateDate,AnswerCount,ClickCount,AttachName,AttachPath,ReadFlag ");
            strSql.Append(" FROM T_Question ");
            if (strWhere.Trim() != "")
            {
                strSql.Append(" where " + strWhere);
            }
            strSql.Append(" order by " + filedOrder);
            return DbHelperSQL.Query(strSql.ToString());
        }

        /*
        /// <summary>
        /// 分页获取数据列表
        /// </summary>
        public DataSet GetList(int PageSize,int PageIndex,string strWhere)
        {
            SqlParameter[] parameters = {
                    new SqlParameter("@tblName", SqlDbType.VarChar, 255),
                    new SqlParameter("@fldName", SqlDbType.VarChar, 255),
                    new SqlParameter("@PageSize", SqlDbType.Int),
                    new SqlParameter("@PageIndex", SqlDbType.Int),
                    new SqlParameter("@IsReCount", SqlDbType.Bit),
                    new SqlParameter("@OrderType", SqlDbType.Bit),
                    new SqlParameter("@strWhere", SqlDbType.VarChar,1000),
                    };
            parameters[0].Value = "T_Question";
            parameters[1].Value = "ID";
            parameters[2].Value = PageSize;
            parameters[3].Value = PageIndex;
            parameters[4].Value = 0;
            parameters[5].Value = 0;
            parameters[6].Value = strWhere;	
            return DbHelperSQL.RunProcedure("UP_GetRecordByPage",parameters,"ds");
        }*/

        #endregion  成员方法

        /// <summary>
        /// 取问题列表，包括工程名等信息
        /// </summary>
        /// <param name="strwhere"></param>
        /// <returns></returns>
        public DataSet GetQuestionList(string RoleID, string UserID)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("select distinct a.questionid,a.SingleProjectID,a.FileListID,a.title,a.description,");
            strSql.Append("a.createuserid,a.createusername,a.createdate,a.touserid,a.tousername,");
            strSql.Append("b.gcmc ,c.title as archivelistname,");
            strSql.Append("(select count(*) from t_questionanswer b where a.questionid=b.questionid) as answercount");
            strSql.Append(" from t_question a ");
            strSql.Append(" left join t_singleproject b on a.SingleProjectID=b.SingleProjectID ");
            strSql.Append(" left join T_FileList c on a.FileListID=c.FileListID ");

            strSql.Append(" left join T_SingleProjectUser D on a.SingleProjectID=D.SingleProjectID ");

            strSql.Append(" WHERE ((CreateUserID=" + UserID + " OR ToUserID=" + UserID + ") OR (ToUserID=0 AND RoleID=" + RoleID + "))");

            return DbHelperSQL.Query(strSql.ToString());
        }

        public DataSet GetQuestionList(string Title, string CreateUserID, string ToUserID)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("select distinct A.*,a.SingleProjectID,b.gcmc,c.FileListID,c.title as FileListName,(select count(*) from t_questionanswer b where a.questionid=b.questionid) as AnswerCount from t_question a  left join t_singleproject b on a.SingleProjectID=b.SingleProjectID  left join T_FileList c on a.FileListID=c.FileListID left join T_QuestionType d on a.QuestionTypeID=d.QuestionTypeID");
            strSql.Append(" where a.Title like '%" + Title + "%'");
            if (CreateUserID != "" && ToUserID != "")
            {
                strSql.Append(" AND (a.CreateUserID=" + CreateUserID + " OR d.ToUserIDList like '%" + CreateUserID + ",%')");
            }
            else if (CreateUserID != "")
            {
                strSql.Append(" AND a.CreateUserID=" + CreateUserID);
            }
            else if (ToUserID != "")
            {
                strSql.Append(" AND d.ToUserIDList like '%" + CreateUserID + ",%'");
            }
            return DbHelperSQL.Query(strSql.ToString());
        }

        public DataSet GetQuestionList(string Title, string CreateUserID, string ToUserID, string strWhere)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("select distinct A.*,a.SingleProjectID,b.gcmc,c.FileListID,c.title as FileListName,(select count(*) from t_questionanswer b where a.questionid=b.questionid) as AnswerCount from t_question a  left join t_singleproject b on a.SingleProjectID=b.SingleProjectID  left join T_FileList c on a.FileListID=c.FileListID left join T_QuestionType d on a.QuestionTypeID=d.QuestionTypeID");
            strSql.Append(" where a.SingleProjectID>0 ");

            if (Title.Trim().Length > 0)
            {
                strSql.Append(" AND a.Title like '%" + Title + "%' ");
            }

            //if (CreateUserID != "" && ToUserID != "")
            //{
            //    strSql.Append(" AND (a.CreateUserID=" + CreateUserID + " OR d.ToUserIDList like '%," + ToUserID + ",%')");
            //}
            if (CreateUserID != "")
            {
                strSql.Append(" AND a.CreateUserID=" + CreateUserID);
            }
            else if (ToUserID != "" && ToUserID!="1")
            {
                //strSql.Append(" AND (d.ToUserIDList like '%" + ToUserID + ",%' OR d.ToUserIDList like '%0,%')");
                strSql.Append(" AND b.ChargeUserID=" + ToUserID);
            }

            if (strWhere.Trim().Length > 0)
            {
                strSql.Append(" AND " + strWhere);
            }

            strSql.Append(" order by a.CREATEDATE desc ");
            return DbHelperSQL.Query(strSql.ToString());
        }

        public DataTable GetQuestionList(string Title, string CreateUserID, string ToUserID,
        string strWhere, int PageSize, int curPage, string PRIMARYKey, string OrderByName, out int recCoun)
        {
            StringBuilder strSql = new StringBuilder();
            strSql.Append("select distinct A.*,b.gcmc,c.title as FileListName from t_question a  left join t_singleproject b on a.SingleProjectID=b.SingleProjectID  left join T_FileList c on a.FileListID=c.FileListID left join T_QuestionType d on a.QuestionTypeID=d.QuestionTypeID");
            strSql.Append(" where a.SingleProjectID>0 ");

            if (Title.Trim().Length > 0)
            {
                strSql.Append(" AND a.Title like '%" + Title + "%' ");
            }

            if (CreateUserID != "")
            {
                strSql.Append(" AND a.CreateUserID=" + CreateUserID);
            }
            else if (ToUserID != "" && ToUserID != "1")
            {
                strSql.Append(" AND b.ChargeUserID=" + ToUserID);
            }

            if (strWhere.Trim().Length > 0)
            {
                strSql.Append(" AND " + strWhere);
            }
            //strSql.Append(" order by a.CREATEDATE desc ");
            //return DbHelperOra.Query(strSql.ToString());
            return PageCtrl.QueryForDataTableSqlServer(strSql.ToString(), PageSize, curPage, PRIMARYKey, OrderByName, out recCoun).Tables[0];

        }
    }
}